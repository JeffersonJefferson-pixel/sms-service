.env:
  directory: ./
  filename: .env-docker
  ignoreIfMalformed: true
  ignoreIfMissing: true
  systemProperties: true
  prefix: ""

spring:
  application:
    name: sms-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://sms-postgres:5432/sms-service}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL:update}

  kafka:
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY:http://schema-registry:8081}
    bootstrap-servers: ${BOOTSTRAP_SERVERS:broker:29092}

  config:
    import: ${CONFIG_SERVER:optional:configserver:http://config-server:8888}

server:
  port: ${SERVER_PORT:8080}

management:
  endpoints:
    web:
      exposure:
        include:
          - refresh

sms:
  provider: ${SMS_PROVIDER:twillio}
  twillio:
    account-sid: ${TWILLIO_ACCOUNT_SID:abc}
    auth-token: ${TWILLIO_AUTH_TOKEN:abc}
    phone-number: ${TWILLIO_PHONE_NUMBER:abc}
  plasgate:
    sender: ${PLASGATE_SENDER:abc}
    private-key: ${PLASGATE_PRIVATE_KEY:abc}
    secret-key: ${PLASGATE_SECRET_KEY:abc}
  mekong:
    username: ${MEKONG_USERNAME:abc}
    pass: ${MEKONG_PASS:abc}

kafka:
  topic:
    send-sms:
      request: send-sms-request
      reply: send-sms-reply

retry:
  maxAttempts: 3
  retry.maxDelay: 100
